// Generated by gencpp from file aruco_service/GenerateArUcoTagsRequest.msg
// DO NOT EDIT!


#ifndef ARUCO_SERVICE_MESSAGE_GENERATEARUCOTAGSREQUEST_H
#define ARUCO_SERVICE_MESSAGE_GENERATEARUCOTAGSREQUEST_H


#include <string>
#include <vector>
#include <memory>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace aruco_service
{
template <class ContainerAllocator>
struct GenerateArUcoTagsRequest_
{
  typedef GenerateArUcoTagsRequest_<ContainerAllocator> Type;

  GenerateArUcoTagsRequest_()
    : id(0)
    , tag_type()
    , output_folder()  {
    }
  GenerateArUcoTagsRequest_(const ContainerAllocator& _alloc)
    : id(0)
    , tag_type(_alloc)
    , output_folder(_alloc)  {
  (void)_alloc;
    }



   typedef int32_t _id_type;
  _id_type id;

   typedef std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> _tag_type_type;
  _tag_type_type tag_type;

   typedef std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> _output_folder_type;
  _output_folder_type output_folder;





  typedef boost::shared_ptr< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> const> ConstPtr;

}; // struct GenerateArUcoTagsRequest_

typedef ::aruco_service::GenerateArUcoTagsRequest_<std::allocator<void> > GenerateArUcoTagsRequest;

typedef boost::shared_ptr< ::aruco_service::GenerateArUcoTagsRequest > GenerateArUcoTagsRequestPtr;
typedef boost::shared_ptr< ::aruco_service::GenerateArUcoTagsRequest const> GenerateArUcoTagsRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator1> & lhs, const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator2> & rhs)
{
  return lhs.id == rhs.id &&
    lhs.tag_type == rhs.tag_type &&
    lhs.output_folder == rhs.output_folder;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator1> & lhs, const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace aruco_service

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "053c309a2f9c891d1b57cd350d17a1e7";
  }

  static const char* value(const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x053c309a2f9c891dULL;
  static const uint64_t static_value2 = 0x1b57cd350d17a1e7ULL;
};

template<class ContainerAllocator>
struct DataType< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "aruco_service/GenerateArUcoTagsRequest";
  }

  static const char* value(const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "int32 id\n"
"string tag_type\n"
"string output_folder\n"
;
  }

  static const char* value(const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.id);
      stream.next(m.tag_type);
      stream.next(m.output_folder);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GenerateArUcoTagsRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::aruco_service::GenerateArUcoTagsRequest_<ContainerAllocator>& v)
  {
    s << indent << "id: ";
    Printer<int32_t>::stream(s, indent + "  ", v.id);
    s << indent << "tag_type: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>>::stream(s, indent + "  ", v.tag_type);
    s << indent << "output_folder: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>>::stream(s, indent + "  ", v.output_folder);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ARUCO_SERVICE_MESSAGE_GENERATEARUCOTAGSREQUEST_H
